{"version":3,"sources":["components/AddFile.js","components/Button.js","components/Header.js","components/NumberBox.js","components/TopNumbers.js","App.js","reportWebVitals.js","index.js"],"names":["AddFile","process","useState","file","setFile","setFileFunc","e","a","preventDefault","reader","FileReader","onload","text","target","result","readAsText","files","className","onSubmit","isValid","numbers","split","map","el","isNaN","parseFloat","alert","type","placeholder","id","accept","onChange","value","Button","colour","onClick","style","backgroundColor","defaultProps","color","Header","showAddTXT","onAdd","NumberBox","number","TopNumbers","top5","colours","num","index","App","setShowAddTXT","topNumbers","setTopNumbers","useEffect","counts","i","length","mostFrequent","push","sort","b","forEach","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEaA,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAyBMC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDAClBD,EAAEE,kBACIC,EAAS,IAAIC,YACZC,OAAP,uCAAgB,WAAOL,GAAP,eAAAC,EAAA,sDACRK,EAAON,EAAEO,OAAOC,OACtBV,EAAQQ,GAFM,2CAAhB,sDAIAH,EAAOM,WAAWT,EAAEO,OAAOG,MAAM,IAPf,2CAAH,sDAUjB,OACE,qBAAKC,UAAU,YAAf,SACE,uBAAMA,UAAU,WAAWC,SAnCd,SAACZ,GAEhB,GADAA,EAAEE,iBACGL,EAAL,CAIA,IAAIgB,GAAU,EACRC,EAAUjB,EAAKkB,MAAM,MAAMC,KAAI,SAACC,GACpC,OAAIC,MAAMC,WAAWF,KACnBJ,GAAU,GACF,IACKI,KAEbJ,EACFlB,EAAQmB,GAERM,MACE,wEAGJtB,EAAQ,SAjBNsB,MAAM,2BAgCN,UACE,qBAAKT,UAAU,eAAf,SACE,uBACEU,KAAK,OACLC,YAAY,WACZC,GAAG,SACHC,OAAO,OACPC,SAAU,SAACzB,GAAD,OAAOD,EAAYC,QAGjC,uBAAOqB,KAAK,SAASK,MAAM,SAASf,UAAU,wBChDhDgB,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQtB,EAAoB,EAApBA,KAAMuB,EAAc,EAAdA,QAC9B,OACE,wBACEA,QAASA,EACTC,MAAO,CAAEC,gBAAiBH,GAC1BjB,UAAU,MAHZ,SAKGL,KAKPqB,EAAOK,aAAe,CACpBC,MAAO,aASMN,QCTAO,EAbA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAC5B,OACE,yBAAQzB,UAAU,SAAlB,UACE,6CACA,cAAC,EAAD,CACEiB,OAAQO,EAAa,MAAQ,QAC7B7B,KAAM6B,EAAa,QAAU,MAC7BN,QAASO,QCTJC,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQV,EAAa,EAAbA,OAClC,OACE,qBAAKjB,UAAU,aAAamB,MAAO,CAAEC,gBAAiBH,GAAtD,SACE,8BAAiB,IAAZU,EAAgB,IAAMA,OCFpBC,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrBC,EAAU,CAAC,OAAQ,SAAU,SAAU,OAAQ,QACrD,OACE,qBAAK9B,UAAU,cAAf,SACG6B,EAAKxB,KAAI,SAAC0B,EAAKC,GAAN,OACR,cAAC,EAAD,CAAuBL,OAAQI,EAAKd,OAAQa,EAAQE,IAApCA,SCmDTC,MApDf,WACE,MAAoChD,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBU,EAAnB,KACA,EAAoCjD,mBAAS,EAAE,GAAI,GAAI,GAAI,GAAI,IAA/D,mBAAOkD,EAAP,KAAmBC,EAAnB,KAsCA,OApCAC,qBAAU,cAAU,IAqClB,sBAAKrC,UAAU,YAAf,UACE,cAAC,EAAD,CACEwB,WAAYA,EACZC,MAAO,kBAAMS,GAAeV,MAE7BA,GAAc,cAAC,EAAD,CAASxC,QAxC5B,SAAyBmB,GACvB+B,GAAc,GAId,IAFA,IAAII,EAAS,GAEJC,EAAI,EAAGA,EAAIpC,EAAQqC,OAAQD,IAC9BD,EAAOnC,EAAQoC,IACjBD,EAAOnC,EAAQoC,KAAO,EAEtBD,EAAOnC,EAAQoC,IAAM,EAGzB,IAAME,EAAe,GACrB,IAAK,IAAId,KAAUW,EACjBG,EAAaC,KAAK,CAACf,EAAQW,EAAOX,KAGpCc,EAAaE,MAAK,SAAUrD,EAAGsD,GAC7B,OAAOA,EAAE,GAAKtD,EAAE,MAGlB,IAAM6C,EAAaM,EAAapC,KAAI,SAACC,GAAD,OAASA,EAAG,MAEhD,GAAI6B,EAAWK,OAAS,EAAG,CACzB,IAAIX,EAAO,EAAE,GAAI,GAAI,GAAI,GAAI,GAC7BM,EAAWU,SAAQ,SAACvC,EAAIiC,GACtBV,EAAKU,GAAKjC,KAEZ8B,EAAcP,QAEdO,EAAcD,EAAWW,MAAM,EAAG,OAWlC,cAAC,EAAD,CAAYjB,KAAMM,QCxCTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0dfac219.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const AddFile = ({ process }) => {\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      alert(\"Please add a .txt file\");\r\n      return;\r\n    }\r\n    let isValid = true;\r\n    const numbers = file.split(\"\\n\").map((el) => {\r\n      if (isNaN(parseFloat(el))) {\r\n        isValid = false;\r\n        return -1;\r\n      } else return +el;\r\n    });\r\n    if (isValid) {\r\n      process(numbers);\r\n    } else {\r\n      alert(\r\n        \"Please input a valid file with only numbers, seperated by new lines.\"\r\n      );\r\n    }\r\n    setFile(\"\");\r\n  };\r\n\r\n  const setFileFunc = async (e) => {\r\n    e.preventDefault();\r\n    const reader = new FileReader();\r\n    reader.onload = async (e) => {\r\n      const text = e.target.result;\r\n      setFile(text);\r\n    };\r\n    reader.readAsText(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"file\"\r\n            placeholder=\"Add file\"\r\n            id=\"myFile\"\r\n            accept=\".txt\"\r\n            onChange={(e) => setFileFunc(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Submit\" className=\"btn btn-block\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ colour, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: colour }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  colour: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Header = ({ showAddTXT, onAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Top Numbers</h1>\r\n      <Button\r\n        colour={showAddTXT ? \"red\" : \"green\"}\r\n        text={showAddTXT ? \"Close\" : \"Add\"}\r\n        onClick={onAdd}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const NumberBox = ({ number, colour }) => {\r\n  return (\r\n    <div className=\"number-box\" style={{ backgroundColor: colour }}>\r\n      <h1>{number === -1 ? \"-\" : number}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import { NumberBox } from \"./NumberBox\";\r\nexport const TopNumbers = ({ top5 }) => {\r\n  const colours = [\"gold\", \"silver\", \"orange\", \"blue\", \"grey\"];\r\n  return (\r\n    <div className=\"top-numbers\">\r\n      {top5.map((num, index) => (\r\n        <NumberBox key={index} number={num} colour={colours[index]} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport { AddFile } from \"./components/AddFile\";\nimport Header from \"./components/Header\";\nimport { TopNumbers } from \"./components/TopNumbers\";\n\nfunction App() {\n  const [showAddTXT, setShowAddTXT] = useState(false);\n  const [topNumbers, setTopNumbers] = useState([-1, -1, -1, -1, -1]);\n\n  useEffect(() => {}, []);\n\n  function count_duplicate(numbers) {\n    setShowAddTXT(false);\n\n    let counts = {};\n\n    for (let i = 0; i < numbers.length; i++) {\n      if (counts[numbers[i]]) {\n        counts[numbers[i]] += 1;\n      } else {\n        counts[numbers[i]] = 1;\n      }\n    }\n    const mostFrequent = [];\n    for (var number in counts) {\n      mostFrequent.push([number, counts[number]]);\n    }\n\n    mostFrequent.sort(function (a, b) {\n      return b[1] - a[1];\n    });\n\n    const topNumbers = mostFrequent.map((el) => +el[0]);\n\n    if (topNumbers.length < 5) {\n      let top5 = [-1, -1, -1, -1, -1];\n      topNumbers.forEach((el, i) => {\n        top5[i] = el;\n      });\n      setTopNumbers(top5);\n    } else {\n      setTopNumbers(topNumbers.slice(0, 5));\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <Header\n        showAddTXT={showAddTXT}\n        onAdd={() => setShowAddTXT(!showAddTXT)}\n      />\n      {showAddTXT && <AddFile process={count_duplicate} />}\n      <TopNumbers top5={topNumbers} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}